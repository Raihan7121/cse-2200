
package bondhon.management.system;

import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.Vector;


/**
 *
 * @author Acer
 */
public class Search extends javax.swing.JFrame {

    /**
     * Creates new form Search
     */
    int id2;
    Vector <Integer> v =new Vector <>();
    public Search(int id1) {
        id2=id1;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        combo_gender = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txt_from = new javax.swing.JTextField();
        txt_to = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        combo_district = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        combo_marital = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        combo_religion = new javax.swing.JComboBox<>();
        combo_education = new javax.swing.JComboBox<>();
        show = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 0));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setAlignmentX(0.0F);
        jPanel1.setAlignmentY(0.0F);
        jPanel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("I AM LOOKING FOR A");

        combo_gender.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        combo_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "MALE", "FEMALE" }));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("TO");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("AGE FROM");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("DISTRICT");

        combo_district.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        combo_district.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "DHAKA", "CHITTAGONG", "KHULNA", "RAJSHAHI", "BARISAL", "SYLHET", "RANGPUR", "MYMENSINGH", "COMILLA", "NARAYANGANJ" }));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("MARITAL STATUS");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("EDUCATIONAL STATUS");

        combo_marital.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        combo_marital.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "SINGLE", "MARRIED", "DIVORCED", "WIDOWED", "SEPARATED", "ENGAGED" }));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("RELIGION");

        combo_religion.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        combo_religion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "ISLAM", "HINDU", "BUDDHA", "CHRISTIAN" }));

        combo_education.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        combo_education.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "NONE", "PEC", "JSC", "SSC", "HSC", "BSC", "MSC", "PhD" }));

        show.setBackground(new java.awt.Color(51, 102, 0));
        show.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        show.setForeground(new java.awt.Color(255, 255, 255));
        show.setText("SEARCH");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        btn_back.setBackground(new java.awt.Color(51, 102, 0));
        btn_back.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        btn_back.setForeground(new java.awt.Color(255, 255, 255));
        btn_back.setText("BACK");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_back)
                                .addGap(33, 33, 33))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(29, 29, 29)
                                        .addComponent(combo_religion, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(68, 68, 68)
                                        .addComponent(combo_district, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(213, 213, 213)
                                        .addComponent(combo_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(24, 24, 24)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(txt_from, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel3)
                                        .addGap(40, 40, 40)
                                        .addComponent(txt_to, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(show)
                        .addContainerGap(767, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 587, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(34, 34, 34)
                        .addComponent(combo_marital, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel8)
                        .addGap(59, 59, 59)
                        .addComponent(combo_education, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_from, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_to, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_marital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_education, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_religion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_district, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(show)
                    .addComponent(btn_back))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1620, 130));

        table.setBackground(new java.awt.Color(0, 51, 51));
        table.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        table.setForeground(new java.awt.Color(255, 255, 255));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                " No", "NAME", "AGE", "GENDER", "RELIGION", "DISTRICT", "MARITAL STATUS", "EDUCATIONAL STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(40);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 1570, 640));

        jLabel1.setBackground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 820, 1560, 50));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void see(){
        int num=0;
        v.clear();
        
        v.add(0);
        String url = "jdbc:mysql://localhost:3306/bondhon";
        String dUser = "root";
        String dPass = "";

        try {
            Connection connection = DriverManager.getConnection(url, dUser, dPass);

            // Replace these with user-provided values
            

            // Create a prepared statement to check if the user's email and password match
            String sql = "SELECT * FROM bondhonuser";

            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            

            ResultSet resultSet = preparedStatement.executeQuery();
             
           // DefaultTableModel model = new DefaultTableModel();
           // JTable jTable = new JTable(model);

            // Add column names to the model
           // model.addColumn("ID");
            //model.addColumn("Username");
            //model.addColumn("Age");
            
            
             DefaultTableModel model =(DefaultTableModel)table.getModel();
            model.setRowCount(0);
            
            boolean isValid;
            
            while(resultSet.next()) {
                isValid=true;
                
              int id = resultSet.getInt("id");
                String username = resultSet.getString("name");
                int age = Integer.parseInt(resultSet.getString("age"));
                String gender = resultSet.getString("gender");
                String religion = resultSet.getString("religion");
                String district = resultSet.getString("district");
                String marital = resultSet.getString("maritalstatus");
                String education = resultSet.getString("education");
                
                if(!" ".equals(combo_gender.getSelectedItem().toString())&&!gender.equals(combo_gender.getSelectedItem().toString())){
                    isValid=false;
                }
                
                
                if(!txt_from.getText().equals("")){
                       int agefrom= Integer.parseInt(txt_from.getText());
                       if(age<agefrom){
                           isValid=false;
                       }
                  }
                // System.out.println("Invalid password.");
                if(!txt_to.getText().equals("")){
                       int ageto= Integer.parseInt(txt_to.getText());
                       if(age>ageto){
                           isValid=false;
                       }
                  }
                if(!" ".equals(combo_marital.getSelectedItem().toString())&&!marital.equals(combo_marital.getSelectedItem().toString())){
                    isValid=false;
                }
                if(!" ".equals(combo_religion.getSelectedItem().toString())&&!religion.equals(combo_religion.getSelectedItem().toString())){
                    isValid=false;
                }
               if(!" ".equals(combo_district.getSelectedItem().toString())&&!district.equals(combo_district.getSelectedItem().toString())){
                    isValid=false;
                }
               if(!" ".equals(combo_education.getSelectedItem().toString())&&!education.equals(combo_education.getSelectedItem().toString())){
                    isValid=false;
                }
                if(id==id2){
                    isValid=false;
                }
                //String address = resultSet.getString("address");
                //model.addRow(new Object[]{id, username, age}); 
                  
              if(isValid){num++;
               v.add(id);
                  model.addRow(new Object []{num,username,age,gender,religion,district,marital,education});  
              }
            } 
            //table=jTable;

            // Close resources
            resultSet.close();
            preparedStatement.close();
            connection.close();
           /* 
            JFrame frame = new JFrame("Data in JTable");
           // frame.add(new JScrollPane(jTable));
            frame.pack();
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setVisible(true);
            
            */
            
        } catch (SQLException e) {
            e.printStackTrace();
        }
        if(num==0){
            JOptionPane.showMessageDialog(new JFrame(), "NOT FOUND ANYONE.!!", "SEARCHED", JOptionPane.ERROR_MESSAGE); 
              
        }
        
}
    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:

        see();
    }//GEN-LAST:event_showActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int in=Integer.parseInt(table.getValueAt(table.getSelectedRow(),0).toString());
        System.out.println(in);
        
        int nn=v.get(in);
          new Searchviewprofile(nn).setVisible(true);
       /* String url = "jdbc:mysql://localhost:3306/bondhon";
        String dUser = "root";
        String dPass = "";
        
        try{
              Connection connection = DriverManager.getConnection(url, dUser, dPass);

            // Replace these with user-provided values
            

            // Create a prepared statement to check if the user's email and password match
            String sql = "SELECT * FROM bondhonuser";

            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            

            ResultSet resultSet = preparedStatement.executeQuery();
             
            
            
        }catch(Exception e){
            e.printStackTrace();
        }
        */
        
    }//GEN-LAST:event_tableMouseClicked

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
              setVisible(false); 
             Dashboard dashFrame=new Dashboard(id2);
             dashFrame.setVisible(true);
             dashFrame.pack();
             dashFrame.setLocationRelativeTo(null);
    }//GEN-LAST:event_btn_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
new Search(1).setVisible(true);
        /* Create and display the form */
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JComboBox<String> combo_district;
    private javax.swing.JComboBox<String> combo_education;
    private javax.swing.JComboBox<String> combo_gender;
    private javax.swing.JComboBox<String> combo_marital;
    private javax.swing.JComboBox<String> combo_religion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton show;
    private javax.swing.JTable table;
    private javax.swing.JTextField txt_from;
    private javax.swing.JTextField txt_to;
    // End of variables declaration//GEN-END:variables
}
